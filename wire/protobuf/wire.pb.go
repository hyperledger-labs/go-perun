// Copyright 2025 - See NOTICE file for copyright holders.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file contains protocol buffer definitions for perun wire messages.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: wire/protobuf/wire.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envelope encapsulates a message with the routing information. That is the
// the sender and the intended receiver.
type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sender of the message.
	Sender *Address `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// intended recipient of the message.
	Recipient *Address `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// msg should contain on the valid message types.
	//
	// Types that are valid to be assigned to Msg:
	//
	//	*Envelope_PingMsg
	//	*Envelope_PongMsg
	//	*Envelope_ShutdownMsg
	//	*Envelope_AuthResponseMsg
	//	*Envelope_LedgerChannelProposalMsg
	//	*Envelope_LedgerChannelProposalAccMsg
	//	*Envelope_SubChannelProposalMsg
	//	*Envelope_SubChannelProposalAccMsg
	//	*Envelope_VirtualChannelProposalMsg
	//	*Envelope_VirtualChannelProposalAccMsg
	//	*Envelope_ChannelProposalRejMsg
	//	*Envelope_ChannelUpdateMsg
	//	*Envelope_VirtualChannelFundingProposalMsg
	//	*Envelope_VirtualChannelSettlementProposalMsg
	//	*Envelope_ChannelUpdateAccMsg
	//	*Envelope_ChannelUpdateRejMsg
	//	*Envelope_ChannelSyncMsg
	Msg           isEnvelope_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Envelope) GetRecipient() *Address {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Envelope) GetMsg() isEnvelope_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Envelope) GetPingMsg() *PingMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_PingMsg); ok {
			return x.PingMsg
		}
	}
	return nil
}

func (x *Envelope) GetPongMsg() *PongMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_PongMsg); ok {
			return x.PongMsg
		}
	}
	return nil
}

func (x *Envelope) GetShutdownMsg() *ShutdownMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_ShutdownMsg); ok {
			return x.ShutdownMsg
		}
	}
	return nil
}

func (x *Envelope) GetAuthResponseMsg() *AuthResponseMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_AuthResponseMsg); ok {
			return x.AuthResponseMsg
		}
	}
	return nil
}

func (x *Envelope) GetLedgerChannelProposalMsg() *LedgerChannelProposalMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_LedgerChannelProposalMsg); ok {
			return x.LedgerChannelProposalMsg
		}
	}
	return nil
}

func (x *Envelope) GetLedgerChannelProposalAccMsg() *LedgerChannelProposalAccMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_LedgerChannelProposalAccMsg); ok {
			return x.LedgerChannelProposalAccMsg
		}
	}
	return nil
}

func (x *Envelope) GetSubChannelProposalMsg() *SubChannelProposalMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_SubChannelProposalMsg); ok {
			return x.SubChannelProposalMsg
		}
	}
	return nil
}

func (x *Envelope) GetSubChannelProposalAccMsg() *SubChannelProposalAccMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_SubChannelProposalAccMsg); ok {
			return x.SubChannelProposalAccMsg
		}
	}
	return nil
}

func (x *Envelope) GetVirtualChannelProposalMsg() *VirtualChannelProposalMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_VirtualChannelProposalMsg); ok {
			return x.VirtualChannelProposalMsg
		}
	}
	return nil
}

func (x *Envelope) GetVirtualChannelProposalAccMsg() *VirtualChannelProposalAccMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_VirtualChannelProposalAccMsg); ok {
			return x.VirtualChannelProposalAccMsg
		}
	}
	return nil
}

func (x *Envelope) GetChannelProposalRejMsg() *ChannelProposalRejMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_ChannelProposalRejMsg); ok {
			return x.ChannelProposalRejMsg
		}
	}
	return nil
}

func (x *Envelope) GetChannelUpdateMsg() *ChannelUpdateMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_ChannelUpdateMsg); ok {
			return x.ChannelUpdateMsg
		}
	}
	return nil
}

func (x *Envelope) GetVirtualChannelFundingProposalMsg() *VirtualChannelFundingProposalMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_VirtualChannelFundingProposalMsg); ok {
			return x.VirtualChannelFundingProposalMsg
		}
	}
	return nil
}

func (x *Envelope) GetVirtualChannelSettlementProposalMsg() *VirtualChannelSettlementProposalMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_VirtualChannelSettlementProposalMsg); ok {
			return x.VirtualChannelSettlementProposalMsg
		}
	}
	return nil
}

func (x *Envelope) GetChannelUpdateAccMsg() *ChannelUpdateAccMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_ChannelUpdateAccMsg); ok {
			return x.ChannelUpdateAccMsg
		}
	}
	return nil
}

func (x *Envelope) GetChannelUpdateRejMsg() *ChannelUpdateRejMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_ChannelUpdateRejMsg); ok {
			return x.ChannelUpdateRejMsg
		}
	}
	return nil
}

func (x *Envelope) GetChannelSyncMsg() *ChannelSyncMsg {
	if x != nil {
		if x, ok := x.Msg.(*Envelope_ChannelSyncMsg); ok {
			return x.ChannelSyncMsg
		}
	}
	return nil
}

type isEnvelope_Msg interface {
	isEnvelope_Msg()
}

type Envelope_PingMsg struct {
	PingMsg *PingMsg `protobuf:"bytes,3,opt,name=ping_msg,json=pingMsg,proto3,oneof"`
}

type Envelope_PongMsg struct {
	PongMsg *PongMsg `protobuf:"bytes,4,opt,name=pong_msg,json=pongMsg,proto3,oneof"`
}

type Envelope_ShutdownMsg struct {
	ShutdownMsg *ShutdownMsg `protobuf:"bytes,5,opt,name=shutdown_msg,json=shutdownMsg,proto3,oneof"`
}

type Envelope_AuthResponseMsg struct {
	AuthResponseMsg *AuthResponseMsg `protobuf:"bytes,6,opt,name=auth_response_msg,json=authResponseMsg,proto3,oneof"`
}

type Envelope_LedgerChannelProposalMsg struct {
	LedgerChannelProposalMsg *LedgerChannelProposalMsg `protobuf:"bytes,7,opt,name=ledger_channel_proposal_msg,json=ledgerChannelProposalMsg,proto3,oneof"`
}

type Envelope_LedgerChannelProposalAccMsg struct {
	LedgerChannelProposalAccMsg *LedgerChannelProposalAccMsg `protobuf:"bytes,8,opt,name=ledger_channel_proposal_acc_msg,json=ledgerChannelProposalAccMsg,proto3,oneof"`
}

type Envelope_SubChannelProposalMsg struct {
	SubChannelProposalMsg *SubChannelProposalMsg `protobuf:"bytes,9,opt,name=sub_channel_proposal_msg,json=subChannelProposalMsg,proto3,oneof"`
}

type Envelope_SubChannelProposalAccMsg struct {
	SubChannelProposalAccMsg *SubChannelProposalAccMsg `protobuf:"bytes,10,opt,name=sub_channel_proposal_acc_msg,json=subChannelProposalAccMsg,proto3,oneof"`
}

type Envelope_VirtualChannelProposalMsg struct {
	VirtualChannelProposalMsg *VirtualChannelProposalMsg `protobuf:"bytes,11,opt,name=virtual_channel_proposal_msg,json=virtualChannelProposalMsg,proto3,oneof"`
}

type Envelope_VirtualChannelProposalAccMsg struct {
	VirtualChannelProposalAccMsg *VirtualChannelProposalAccMsg `protobuf:"bytes,12,opt,name=virtual_channel_proposal_acc_msg,json=virtualChannelProposalAccMsg,proto3,oneof"`
}

type Envelope_ChannelProposalRejMsg struct {
	ChannelProposalRejMsg *ChannelProposalRejMsg `protobuf:"bytes,13,opt,name=channel_proposal_rej_msg,json=channelProposalRejMsg,proto3,oneof"`
}

type Envelope_ChannelUpdateMsg struct {
	ChannelUpdateMsg *ChannelUpdateMsg `protobuf:"bytes,14,opt,name=channel_update_msg,json=channelUpdateMsg,proto3,oneof"`
}

type Envelope_VirtualChannelFundingProposalMsg struct {
	VirtualChannelFundingProposalMsg *VirtualChannelFundingProposalMsg `protobuf:"bytes,15,opt,name=virtual_channel_funding_proposal_msg,json=virtualChannelFundingProposalMsg,proto3,oneof"`
}

type Envelope_VirtualChannelSettlementProposalMsg struct {
	VirtualChannelSettlementProposalMsg *VirtualChannelSettlementProposalMsg `protobuf:"bytes,16,opt,name=virtual_channel_settlement_proposal_msg,json=virtualChannelSettlementProposalMsg,proto3,oneof"`
}

type Envelope_ChannelUpdateAccMsg struct {
	ChannelUpdateAccMsg *ChannelUpdateAccMsg `protobuf:"bytes,17,opt,name=channel_update_acc_msg,json=channelUpdateAccMsg,proto3,oneof"`
}

type Envelope_ChannelUpdateRejMsg struct {
	ChannelUpdateRejMsg *ChannelUpdateRejMsg `protobuf:"bytes,18,opt,name=channel_update_rej_msg,json=channelUpdateRejMsg,proto3,oneof"`
}

type Envelope_ChannelSyncMsg struct {
	ChannelSyncMsg *ChannelSyncMsg `protobuf:"bytes,19,opt,name=channel_sync_msg,json=channelSyncMsg,proto3,oneof"`
}

func (*Envelope_PingMsg) isEnvelope_Msg() {}

func (*Envelope_PongMsg) isEnvelope_Msg() {}

func (*Envelope_ShutdownMsg) isEnvelope_Msg() {}

func (*Envelope_AuthResponseMsg) isEnvelope_Msg() {}

func (*Envelope_LedgerChannelProposalMsg) isEnvelope_Msg() {}

func (*Envelope_LedgerChannelProposalAccMsg) isEnvelope_Msg() {}

func (*Envelope_SubChannelProposalMsg) isEnvelope_Msg() {}

func (*Envelope_SubChannelProposalAccMsg) isEnvelope_Msg() {}

func (*Envelope_VirtualChannelProposalMsg) isEnvelope_Msg() {}

func (*Envelope_VirtualChannelProposalAccMsg) isEnvelope_Msg() {}

func (*Envelope_ChannelProposalRejMsg) isEnvelope_Msg() {}

func (*Envelope_ChannelUpdateMsg) isEnvelope_Msg() {}

func (*Envelope_VirtualChannelFundingProposalMsg) isEnvelope_Msg() {}

func (*Envelope_VirtualChannelSettlementProposalMsg) isEnvelope_Msg() {}

func (*Envelope_ChannelUpdateAccMsg) isEnvelope_Msg() {}

func (*Envelope_ChannelUpdateRejMsg) isEnvelope_Msg() {}

func (*Envelope_ChannelSyncMsg) isEnvelope_Msg() {}

// Balance represents the balance of a single asset, for all the channel
// participants.
type Balance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       [][]byte               `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance) Reset() {
	*x = Balance{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{1}
}

func (x *Balance) GetBalance() [][]byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

// Balances represents the balance of all the assets, for all the channel
// participants.
type Balances struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*Balance             `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balances) Reset() {
	*x = Balances{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balances) ProtoMessage() {}

func (x *Balances) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balances.ProtoReflect.Descriptor instead.
func (*Balances) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{2}
}

func (x *Balances) GetBalances() []*Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

// AddressMapping represents an element of a address mapping.
type AddressMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Address       []byte                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressMapping) Reset() {
	*x = AddressMapping{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressMapping) ProtoMessage() {}

func (x *AddressMapping) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressMapping.ProtoReflect.Descriptor instead.
func (*AddressMapping) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{3}
}

func (x *AddressMapping) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AddressMapping) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// Address represents the map of addresses for each participant in the channel.
type Address struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AddressMapping []*AddressMapping      `protobuf:"bytes,1,rep,name=address_mapping,json=addressMapping,proto3" json:"address_mapping,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{4}
}

func (x *Address) GetAddressMapping() []*AddressMapping {
	if x != nil {
		return x.AddressMapping
	}
	return nil
}

// IndexMap represents the mapping of a participant indices in a sub allocation
// or a virtual channel funding proposal to the corresponding indices in the
// parent channel.
type IndexMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexMap      []uint32               `protobuf:"varint,1,rep,packed,name=index_map,json=indexMap,proto3" json:"index_map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexMap) Reset() {
	*x = IndexMap{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexMap) ProtoMessage() {}

func (x *IndexMap) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexMap.ProtoReflect.Descriptor instead.
func (*IndexMap) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{5}
}

func (x *IndexMap) GetIndexMap() []uint32 {
	if x != nil {
		return x.IndexMap
	}
	return nil
}

// SubAlloc represts a sub allocation.
type SubAlloc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bals          *Balance               `protobuf:"bytes,2,opt,name=bals,proto3" json:"bals,omitempty"`
	IndexMap      *IndexMap              `protobuf:"bytes,3,opt,name=index_map,json=indexMap,proto3" json:"index_map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubAlloc) Reset() {
	*x = SubAlloc{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubAlloc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubAlloc) ProtoMessage() {}

func (x *SubAlloc) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubAlloc.ProtoReflect.Descriptor instead.
func (*SubAlloc) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{6}
}

func (x *SubAlloc) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubAlloc) GetBals() *Balance {
	if x != nil {
		return x.Bals
	}
	return nil
}

func (x *SubAlloc) GetIndexMap() *IndexMap {
	if x != nil {
		return x.IndexMap
	}
	return nil
}

// Allocation represents channel.Allocation.
type Allocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Backends      [][]byte               `protobuf:"bytes,1,rep,name=backends,proto3" json:"backends,omitempty"`
	Assets        [][]byte               `protobuf:"bytes,2,rep,name=assets,proto3" json:"assets,omitempty"`
	Balances      *Balances              `protobuf:"bytes,3,opt,name=balances,proto3" json:"balances,omitempty"`
	Locked        []*SubAlloc            `protobuf:"bytes,4,rep,name=locked,proto3" json:"locked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Allocation) Reset() {
	*x = Allocation{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Allocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Allocation) ProtoMessage() {}

func (x *Allocation) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Allocation.ProtoReflect.Descriptor instead.
func (*Allocation) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{7}
}

func (x *Allocation) GetBackends() [][]byte {
	if x != nil {
		return x.Backends
	}
	return nil
}

func (x *Allocation) GetAssets() [][]byte {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *Allocation) GetBalances() *Balances {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *Allocation) GetLocked() []*SubAlloc {
	if x != nil {
		return x.Locked
	}
	return nil
}

// BaseChannelProposal represents client.BaseChannelProposal.
type BaseChannelProposal struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ProposalId        []byte                 `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	ChallengeDuration uint64                 `protobuf:"varint,2,opt,name=challenge_duration,json=challengeDuration,proto3" json:"challenge_duration,omitempty"`
	NonceShare        []byte                 `protobuf:"bytes,3,opt,name=nonce_share,json=nonceShare,proto3" json:"nonce_share,omitempty"`
	App               []byte                 `protobuf:"bytes,4,opt,name=app,proto3" json:"app,omitempty"`
	InitData          []byte                 `protobuf:"bytes,5,opt,name=init_data,json=initData,proto3" json:"init_data,omitempty"`
	InitBals          *Allocation            `protobuf:"bytes,6,opt,name=init_bals,json=initBals,proto3" json:"init_bals,omitempty"`
	FundingAgreement  *Balances              `protobuf:"bytes,7,opt,name=funding_agreement,json=fundingAgreement,proto3" json:"funding_agreement,omitempty"`
	Aux               []byte                 `protobuf:"bytes,8,opt,name=aux,proto3" json:"aux,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BaseChannelProposal) Reset() {
	*x = BaseChannelProposal{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseChannelProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseChannelProposal) ProtoMessage() {}

func (x *BaseChannelProposal) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseChannelProposal.ProtoReflect.Descriptor instead.
func (*BaseChannelProposal) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{8}
}

func (x *BaseChannelProposal) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

func (x *BaseChannelProposal) GetChallengeDuration() uint64 {
	if x != nil {
		return x.ChallengeDuration
	}
	return 0
}

func (x *BaseChannelProposal) GetNonceShare() []byte {
	if x != nil {
		return x.NonceShare
	}
	return nil
}

func (x *BaseChannelProposal) GetApp() []byte {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *BaseChannelProposal) GetInitData() []byte {
	if x != nil {
		return x.InitData
	}
	return nil
}

func (x *BaseChannelProposal) GetInitBals() *Allocation {
	if x != nil {
		return x.InitBals
	}
	return nil
}

func (x *BaseChannelProposal) GetFundingAgreement() *Balances {
	if x != nil {
		return x.FundingAgreement
	}
	return nil
}

func (x *BaseChannelProposal) GetAux() []byte {
	if x != nil {
		return x.Aux
	}
	return nil
}

// BaseChannelProposalAcc represents client.BaseChannelProposalAcc.
type BaseChannelProposalAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProposalId    []byte                 `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	NonceShare    []byte                 `protobuf:"bytes,2,opt,name=nonce_share,json=nonceShare,proto3" json:"nonce_share,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseChannelProposalAcc) Reset() {
	*x = BaseChannelProposalAcc{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseChannelProposalAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseChannelProposalAcc) ProtoMessage() {}

func (x *BaseChannelProposalAcc) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseChannelProposalAcc.ProtoReflect.Descriptor instead.
func (*BaseChannelProposalAcc) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{9}
}

func (x *BaseChannelProposalAcc) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

func (x *BaseChannelProposalAcc) GetNonceShare() []byte {
	if x != nil {
		return x.NonceShare
	}
	return nil
}

// Params represents channel.Params.
type Params struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChallengeDuration uint64                 `protobuf:"varint,2,opt,name=challenge_duration,json=challengeDuration,proto3" json:"challenge_duration,omitempty"`
	Parts             []*Address             `protobuf:"bytes,3,rep,name=parts,proto3" json:"parts,omitempty"`
	App               []byte                 `protobuf:"bytes,4,opt,name=app,proto3" json:"app,omitempty"`
	Nonce             []byte                 `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	LedgerChannel     bool                   `protobuf:"varint,6,opt,name=ledger_channel,json=ledgerChannel,proto3" json:"ledger_channel,omitempty"`
	VirtualChannel    bool                   `protobuf:"varint,7,opt,name=virtual_channel,json=virtualChannel,proto3" json:"virtual_channel,omitempty"`
	Aux               []byte                 `protobuf:"bytes,8,opt,name=aux,proto3" json:"aux,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Params) Reset() {
	*x = Params{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

func (x *Params) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{10}
}

func (x *Params) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Params) GetChallengeDuration() uint64 {
	if x != nil {
		return x.ChallengeDuration
	}
	return 0
}

func (x *Params) GetParts() []*Address {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *Params) GetApp() []byte {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Params) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Params) GetLedgerChannel() bool {
	if x != nil {
		return x.LedgerChannel
	}
	return false
}

func (x *Params) GetVirtualChannel() bool {
	if x != nil {
		return x.VirtualChannel
	}
	return false
}

func (x *Params) GetAux() []byte {
	if x != nil {
		return x.Aux
	}
	return nil
}

// State represents channel.State.
type State struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	App           []byte                 `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	Allocation    *Allocation            `protobuf:"bytes,4,opt,name=allocation,proto3" json:"allocation,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	IsFinal       bool                   `protobuf:"varint,6,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{11}
}

func (x *State) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *State) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *State) GetApp() []byte {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *State) GetAllocation() *Allocation {
	if x != nil {
		return x.Allocation
	}
	return nil
}

func (x *State) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *State) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// Transaction represents channel.Transaction.
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *State                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Sigs          [][]byte               `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{12}
}

func (x *Transaction) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Transaction) GetSigs() [][]byte {
	if x != nil {
		return x.Sigs
	}
	return nil
}

// SignedState represents channel.SignedState.
type SignedState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *Params                `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	State         *State                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Sigs          [][]byte               `protobuf:"bytes,3,rep,name=sigs,proto3" json:"sigs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedState) Reset() {
	*x = SignedState{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedState) ProtoMessage() {}

func (x *SignedState) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedState.ProtoReflect.Descriptor instead.
func (*SignedState) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{13}
}

func (x *SignedState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SignedState) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *SignedState) GetSigs() [][]byte {
	if x != nil {
		return x.Sigs
	}
	return nil
}

// ChannelUpdate represents channel.ChannelUpdate.
type ChannelUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *State                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	ActorIdx      uint32                 `protobuf:"varint,2,opt,name=actor_idx,json=actorIdx,proto3" json:"actor_idx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelUpdate) Reset() {
	*x = ChannelUpdate{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdate) ProtoMessage() {}

func (x *ChannelUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdate.ProtoReflect.Descriptor instead.
func (*ChannelUpdate) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{14}
}

func (x *ChannelUpdate) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ChannelUpdate) GetActorIdx() uint32 {
	if x != nil {
		return x.ActorIdx
	}
	return 0
}

// PingMsg represents wire.PingMsg.
type PingMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Created       int64                  `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingMsg) Reset() {
	*x = PingMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMsg) ProtoMessage() {}

func (x *PingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMsg.ProtoReflect.Descriptor instead.
func (*PingMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{15}
}

func (x *PingMsg) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

// PongMsg represents wire.PongMsg.
type PongMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Created       int64                  `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongMsg) Reset() {
	*x = PongMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMsg) ProtoMessage() {}

func (x *PongMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongMsg.ProtoReflect.Descriptor instead.
func (*PongMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{16}
}

func (x *PongMsg) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

// ShutdownMsg represents wire.ShutdownMsg.
type ShutdownMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownMsg) Reset() {
	*x = ShutdownMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownMsg) ProtoMessage() {}

func (x *ShutdownMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownMsg.ProtoReflect.Descriptor instead.
func (*ShutdownMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{17}
}

func (x *ShutdownMsg) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// AuthResponseMsg represents wire.AuthResponseMsg.
type AuthResponseMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponseMsg) Reset() {
	*x = AuthResponseMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponseMsg) ProtoMessage() {}

func (x *AuthResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponseMsg.ProtoReflect.Descriptor instead.
func (*AuthResponseMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{18}
}

func (x *AuthResponseMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// LedgerChannelProposalMsg represents client.LedgerChannelProposalMsg.
type LedgerChannelProposalMsg struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BaseChannelProposal *BaseChannelProposal   `protobuf:"bytes,1,opt,name=base_channel_proposal,json=baseChannelProposal,proto3" json:"base_channel_proposal,omitempty"`
	Participant         *Address               `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	Peers               []*Address             `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LedgerChannelProposalMsg) Reset() {
	*x = LedgerChannelProposalMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgerChannelProposalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerChannelProposalMsg) ProtoMessage() {}

func (x *LedgerChannelProposalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerChannelProposalMsg.ProtoReflect.Descriptor instead.
func (*LedgerChannelProposalMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{19}
}

func (x *LedgerChannelProposalMsg) GetBaseChannelProposal() *BaseChannelProposal {
	if x != nil {
		return x.BaseChannelProposal
	}
	return nil
}

func (x *LedgerChannelProposalMsg) GetParticipant() *Address {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *LedgerChannelProposalMsg) GetPeers() []*Address {
	if x != nil {
		return x.Peers
	}
	return nil
}

// LedgerChannelProposalAccMsg represents client.LedgerChannelProposalAccMsg.
type LedgerChannelProposalAccMsg struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	BaseChannelProposalAcc *BaseChannelProposalAcc `protobuf:"bytes,1,opt,name=base_channel_proposal_acc,json=baseChannelProposalAcc,proto3" json:"base_channel_proposal_acc,omitempty"`
	Participant            *Address                `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LedgerChannelProposalAccMsg) Reset() {
	*x = LedgerChannelProposalAccMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgerChannelProposalAccMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerChannelProposalAccMsg) ProtoMessage() {}

func (x *LedgerChannelProposalAccMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerChannelProposalAccMsg.ProtoReflect.Descriptor instead.
func (*LedgerChannelProposalAccMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{20}
}

func (x *LedgerChannelProposalAccMsg) GetBaseChannelProposalAcc() *BaseChannelProposalAcc {
	if x != nil {
		return x.BaseChannelProposalAcc
	}
	return nil
}

func (x *LedgerChannelProposalAccMsg) GetParticipant() *Address {
	if x != nil {
		return x.Participant
	}
	return nil
}

// SubChannelProposalMsg represents client.SubChannelProposalMsg.
type SubChannelProposalMsg struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BaseChannelProposal *BaseChannelProposal   `protobuf:"bytes,1,opt,name=base_channel_proposal,json=baseChannelProposal,proto3" json:"base_channel_proposal,omitempty"`
	Parent              []byte                 `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SubChannelProposalMsg) Reset() {
	*x = SubChannelProposalMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubChannelProposalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubChannelProposalMsg) ProtoMessage() {}

func (x *SubChannelProposalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubChannelProposalMsg.ProtoReflect.Descriptor instead.
func (*SubChannelProposalMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{21}
}

func (x *SubChannelProposalMsg) GetBaseChannelProposal() *BaseChannelProposal {
	if x != nil {
		return x.BaseChannelProposal
	}
	return nil
}

func (x *SubChannelProposalMsg) GetParent() []byte {
	if x != nil {
		return x.Parent
	}
	return nil
}

// SubChannelProposalAccMsg represents client.SubChannelProposalAccMsg.
type SubChannelProposalAccMsg struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	BaseChannelProposalAcc *BaseChannelProposalAcc `protobuf:"bytes,1,opt,name=base_channel_proposal_acc,json=baseChannelProposalAcc,proto3" json:"base_channel_proposal_acc,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SubChannelProposalAccMsg) Reset() {
	*x = SubChannelProposalAccMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubChannelProposalAccMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubChannelProposalAccMsg) ProtoMessage() {}

func (x *SubChannelProposalAccMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubChannelProposalAccMsg.ProtoReflect.Descriptor instead.
func (*SubChannelProposalAccMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{22}
}

func (x *SubChannelProposalAccMsg) GetBaseChannelProposalAcc() *BaseChannelProposalAcc {
	if x != nil {
		return x.BaseChannelProposalAcc
	}
	return nil
}

// VirtualChannelProposalMsg represents client.VirtualChannelProposalMsg.
type VirtualChannelProposalMsg struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BaseChannelProposal *BaseChannelProposal   `protobuf:"bytes,1,opt,name=base_channel_proposal,json=baseChannelProposal,proto3" json:"base_channel_proposal,omitempty"`
	Proposer            *Address               `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Peers               []*Address             `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	Parents             [][]byte               `protobuf:"bytes,4,rep,name=parents,proto3" json:"parents,omitempty"`
	IndexMaps           []*IndexMap            `protobuf:"bytes,5,rep,name=index_maps,json=indexMaps,proto3" json:"index_maps,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *VirtualChannelProposalMsg) Reset() {
	*x = VirtualChannelProposalMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualChannelProposalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualChannelProposalMsg) ProtoMessage() {}

func (x *VirtualChannelProposalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualChannelProposalMsg.ProtoReflect.Descriptor instead.
func (*VirtualChannelProposalMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{23}
}

func (x *VirtualChannelProposalMsg) GetBaseChannelProposal() *BaseChannelProposal {
	if x != nil {
		return x.BaseChannelProposal
	}
	return nil
}

func (x *VirtualChannelProposalMsg) GetProposer() *Address {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *VirtualChannelProposalMsg) GetPeers() []*Address {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *VirtualChannelProposalMsg) GetParents() [][]byte {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *VirtualChannelProposalMsg) GetIndexMaps() []*IndexMap {
	if x != nil {
		return x.IndexMaps
	}
	return nil
}

// VirtualChannelProposalAccMsg represents client.VirtualChannelProposalAccMsg.
type VirtualChannelProposalAccMsg struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	BaseChannelProposalAcc *BaseChannelProposalAcc `protobuf:"bytes,1,opt,name=base_channel_proposal_acc,json=baseChannelProposalAcc,proto3" json:"base_channel_proposal_acc,omitempty"`
	Responder              *Address                `protobuf:"bytes,2,opt,name=responder,proto3" json:"responder,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualChannelProposalAccMsg) Reset() {
	*x = VirtualChannelProposalAccMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualChannelProposalAccMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualChannelProposalAccMsg) ProtoMessage() {}

func (x *VirtualChannelProposalAccMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualChannelProposalAccMsg.ProtoReflect.Descriptor instead.
func (*VirtualChannelProposalAccMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{24}
}

func (x *VirtualChannelProposalAccMsg) GetBaseChannelProposalAcc() *BaseChannelProposalAcc {
	if x != nil {
		return x.BaseChannelProposalAcc
	}
	return nil
}

func (x *VirtualChannelProposalAccMsg) GetResponder() *Address {
	if x != nil {
		return x.Responder
	}
	return nil
}

// ChannelProposalRejMsg represents client.ChannelProposalRejMsg.
type ChannelProposalRejMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProposalId    []byte                 `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelProposalRejMsg) Reset() {
	*x = ChannelProposalRejMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelProposalRejMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelProposalRejMsg) ProtoMessage() {}

func (x *ChannelProposalRejMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelProposalRejMsg.ProtoReflect.Descriptor instead.
func (*ChannelProposalRejMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{25}
}

func (x *ChannelProposalRejMsg) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

func (x *ChannelProposalRejMsg) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// ChannelUpdateMsg represents client.ChannelUpdateMsg.
type ChannelUpdateMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelUpdate *ChannelUpdate         `protobuf:"bytes,1,opt,name=channel_update,json=channelUpdate,proto3" json:"channel_update,omitempty"`
	Sig           []byte                 `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelUpdateMsg) Reset() {
	*x = ChannelUpdateMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelUpdateMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateMsg) ProtoMessage() {}

func (x *ChannelUpdateMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateMsg.ProtoReflect.Descriptor instead.
func (*ChannelUpdateMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{26}
}

func (x *ChannelUpdateMsg) GetChannelUpdate() *ChannelUpdate {
	if x != nil {
		return x.ChannelUpdate
	}
	return nil
}

func (x *ChannelUpdateMsg) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// VirtualChannelFundingProposalMsg represents
// client.VirtualChannelFundingProposalMsg.
type VirtualChannelFundingProposalMsg struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChannelUpdateMsg *ChannelUpdateMsg      `protobuf:"bytes,1,opt,name=channel_update_msg,json=channelUpdateMsg,proto3" json:"channel_update_msg,omitempty"`
	Initial          *SignedState           `protobuf:"bytes,2,opt,name=initial,proto3" json:"initial,omitempty"`
	IndexMap         *IndexMap              `protobuf:"bytes,3,opt,name=index_map,json=indexMap,proto3" json:"index_map,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VirtualChannelFundingProposalMsg) Reset() {
	*x = VirtualChannelFundingProposalMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualChannelFundingProposalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualChannelFundingProposalMsg) ProtoMessage() {}

func (x *VirtualChannelFundingProposalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualChannelFundingProposalMsg.ProtoReflect.Descriptor instead.
func (*VirtualChannelFundingProposalMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{27}
}

func (x *VirtualChannelFundingProposalMsg) GetChannelUpdateMsg() *ChannelUpdateMsg {
	if x != nil {
		return x.ChannelUpdateMsg
	}
	return nil
}

func (x *VirtualChannelFundingProposalMsg) GetInitial() *SignedState {
	if x != nil {
		return x.Initial
	}
	return nil
}

func (x *VirtualChannelFundingProposalMsg) GetIndexMap() *IndexMap {
	if x != nil {
		return x.IndexMap
	}
	return nil
}

// VirtualChannelSettlementProposalMsg represents
// client.VirtualChannelSettlementProposalMsg.
type VirtualChannelSettlementProposalMsg struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChannelUpdateMsg *ChannelUpdateMsg      `protobuf:"bytes,1,opt,name=channel_update_msg,json=channelUpdateMsg,proto3" json:"channel_update_msg,omitempty"`
	Final            *SignedState           `protobuf:"bytes,2,opt,name=final,proto3" json:"final,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VirtualChannelSettlementProposalMsg) Reset() {
	*x = VirtualChannelSettlementProposalMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualChannelSettlementProposalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualChannelSettlementProposalMsg) ProtoMessage() {}

func (x *VirtualChannelSettlementProposalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualChannelSettlementProposalMsg.ProtoReflect.Descriptor instead.
func (*VirtualChannelSettlementProposalMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{28}
}

func (x *VirtualChannelSettlementProposalMsg) GetChannelUpdateMsg() *ChannelUpdateMsg {
	if x != nil {
		return x.ChannelUpdateMsg
	}
	return nil
}

func (x *VirtualChannelSettlementProposalMsg) GetFinal() *SignedState {
	if x != nil {
		return x.Final
	}
	return nil
}

// ChannelUpdateAccMsg represents client.ChannelUpdateAccMsg.
type ChannelUpdateAccMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     []byte                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Sig           []byte                 `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelUpdateAccMsg) Reset() {
	*x = ChannelUpdateAccMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelUpdateAccMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateAccMsg) ProtoMessage() {}

func (x *ChannelUpdateAccMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateAccMsg.ProtoReflect.Descriptor instead.
func (*ChannelUpdateAccMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{29}
}

func (x *ChannelUpdateAccMsg) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelUpdateAccMsg) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ChannelUpdateAccMsg) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// ChannelUpdateRejMsg represents client.ChannelUpdateRejMsg.
type ChannelUpdateRejMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     []byte                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelUpdateRejMsg) Reset() {
	*x = ChannelUpdateRejMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelUpdateRejMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateRejMsg) ProtoMessage() {}

func (x *ChannelUpdateRejMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateRejMsg.ProtoReflect.Descriptor instead.
func (*ChannelUpdateRejMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{30}
}

func (x *ChannelUpdateRejMsg) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelUpdateRejMsg) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ChannelUpdateRejMsg) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// ChannelSyncMsg represents client.ChannelSyncMsg.
type ChannelSyncMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phase         uint32                 `protobuf:"varint,1,opt,name=phase,proto3" json:"phase,omitempty"`
	CurrentTx     *Transaction           `protobuf:"bytes,2,opt,name=current_tx,json=currentTx,proto3" json:"current_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelSyncMsg) Reset() {
	*x = ChannelSyncMsg{}
	mi := &file_wire_protobuf_wire_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelSyncMsg) ProtoMessage() {}

func (x *ChannelSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_wire_protobuf_wire_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelSyncMsg.ProtoReflect.Descriptor instead.
func (*ChannelSyncMsg) Descriptor() ([]byte, []int) {
	return file_wire_protobuf_wire_proto_rawDescGZIP(), []int{31}
}

func (x *ChannelSyncMsg) GetPhase() uint32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *ChannelSyncMsg) GetCurrentTx() *Transaction {
	if x != nil {
		return x.CurrentTx
	}
	return nil
}

var File_wire_protobuf_wire_proto protoreflect.FileDescriptor

const file_wire_protobuf_wire_proto_rawDesc = "" +
	"\n" +
	"\x18wire/protobuf/wire.proto\x12\tperunwire\"\xf5\f\n" +
	"\bEnvelope\x12*\n" +
	"\x06sender\x18\x01 \x01(\v2\x12.perunwire.AddressR\x06sender\x120\n" +
	"\trecipient\x18\x02 \x01(\v2\x12.perunwire.AddressR\trecipient\x12/\n" +
	"\bping_msg\x18\x03 \x01(\v2\x12.perunwire.PingMsgH\x00R\apingMsg\x12/\n" +
	"\bpong_msg\x18\x04 \x01(\v2\x12.perunwire.PongMsgH\x00R\apongMsg\x12;\n" +
	"\fshutdown_msg\x18\x05 \x01(\v2\x16.perunwire.ShutdownMsgH\x00R\vshutdownMsg\x12H\n" +
	"\x11auth_response_msg\x18\x06 \x01(\v2\x1a.perunwire.AuthResponseMsgH\x00R\x0fauthResponseMsg\x12d\n" +
	"\x1bledger_channel_proposal_msg\x18\a \x01(\v2#.perunwire.LedgerChannelProposalMsgH\x00R\x18ledgerChannelProposalMsg\x12n\n" +
	"\x1fledger_channel_proposal_acc_msg\x18\b \x01(\v2&.perunwire.LedgerChannelProposalAccMsgH\x00R\x1bledgerChannelProposalAccMsg\x12[\n" +
	"\x18sub_channel_proposal_msg\x18\t \x01(\v2 .perunwire.SubChannelProposalMsgH\x00R\x15subChannelProposalMsg\x12e\n" +
	"\x1csub_channel_proposal_acc_msg\x18\n" +
	" \x01(\v2#.perunwire.SubChannelProposalAccMsgH\x00R\x18subChannelProposalAccMsg\x12g\n" +
	"\x1cvirtual_channel_proposal_msg\x18\v \x01(\v2$.perunwire.VirtualChannelProposalMsgH\x00R\x19virtualChannelProposalMsg\x12q\n" +
	" virtual_channel_proposal_acc_msg\x18\f \x01(\v2'.perunwire.VirtualChannelProposalAccMsgH\x00R\x1cvirtualChannelProposalAccMsg\x12[\n" +
	"\x18channel_proposal_rej_msg\x18\r \x01(\v2 .perunwire.ChannelProposalRejMsgH\x00R\x15channelProposalRejMsg\x12K\n" +
	"\x12channel_update_msg\x18\x0e \x01(\v2\x1b.perunwire.ChannelUpdateMsgH\x00R\x10channelUpdateMsg\x12}\n" +
	"$virtual_channel_funding_proposal_msg\x18\x0f \x01(\v2+.perunwire.VirtualChannelFundingProposalMsgH\x00R virtualChannelFundingProposalMsg\x12\x86\x01\n" +
	"'virtual_channel_settlement_proposal_msg\x18\x10 \x01(\v2..perunwire.VirtualChannelSettlementProposalMsgH\x00R#virtualChannelSettlementProposalMsg\x12U\n" +
	"\x16channel_update_acc_msg\x18\x11 \x01(\v2\x1e.perunwire.ChannelUpdateAccMsgH\x00R\x13channelUpdateAccMsg\x12U\n" +
	"\x16channel_update_rej_msg\x18\x12 \x01(\v2\x1e.perunwire.ChannelUpdateRejMsgH\x00R\x13channelUpdateRejMsg\x12E\n" +
	"\x10channel_sync_msg\x18\x13 \x01(\v2\x19.perunwire.ChannelSyncMsgH\x00R\x0echannelSyncMsgB\x05\n" +
	"\x03msg\"#\n" +
	"\aBalance\x12\x18\n" +
	"\abalance\x18\x01 \x03(\fR\abalance\":\n" +
	"\bBalances\x12.\n" +
	"\bbalances\x18\x01 \x03(\v2\x12.perunwire.BalanceR\bbalances\"<\n" +
	"\x0eAddressMapping\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\fR\aaddress\"M\n" +
	"\aAddress\x12B\n" +
	"\x0faddress_mapping\x18\x01 \x03(\v2\x19.perunwire.AddressMappingR\x0eaddressMapping\"'\n" +
	"\bIndexMap\x12\x1b\n" +
	"\tindex_map\x18\x01 \x03(\rR\bindexMap\"t\n" +
	"\bSubAlloc\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12&\n" +
	"\x04bals\x18\x02 \x01(\v2\x12.perunwire.BalanceR\x04bals\x120\n" +
	"\tindex_map\x18\x03 \x01(\v2\x13.perunwire.IndexMapR\bindexMap\"\x9e\x01\n" +
	"\n" +
	"Allocation\x12\x1a\n" +
	"\bbackends\x18\x01 \x03(\fR\bbackends\x12\x16\n" +
	"\x06assets\x18\x02 \x03(\fR\x06assets\x12/\n" +
	"\bbalances\x18\x03 \x01(\v2\x13.perunwire.BalancesR\bbalances\x12+\n" +
	"\x06locked\x18\x04 \x03(\v2\x13.perunwire.SubAllocR\x06locked\"\xbd\x02\n" +
	"\x13BaseChannelProposal\x12\x1f\n" +
	"\vproposal_id\x18\x01 \x01(\fR\n" +
	"proposalId\x12-\n" +
	"\x12challenge_duration\x18\x02 \x01(\x04R\x11challengeDuration\x12\x1f\n" +
	"\vnonce_share\x18\x03 \x01(\fR\n" +
	"nonceShare\x12\x10\n" +
	"\x03app\x18\x04 \x01(\fR\x03app\x12\x1b\n" +
	"\tinit_data\x18\x05 \x01(\fR\binitData\x122\n" +
	"\tinit_bals\x18\x06 \x01(\v2\x15.perunwire.AllocationR\binitBals\x12@\n" +
	"\x11funding_agreement\x18\a \x01(\v2\x13.perunwire.BalancesR\x10fundingAgreement\x12\x10\n" +
	"\x03aux\x18\b \x01(\fR\x03aux\"Z\n" +
	"\x16BaseChannelProposalAcc\x12\x1f\n" +
	"\vproposal_id\x18\x01 \x01(\fR\n" +
	"proposalId\x12\x1f\n" +
	"\vnonce_share\x18\x02 \x01(\fR\n" +
	"nonceShare\"\xfb\x01\n" +
	"\x06Params\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12-\n" +
	"\x12challenge_duration\x18\x02 \x01(\x04R\x11challengeDuration\x12(\n" +
	"\x05parts\x18\x03 \x03(\v2\x12.perunwire.AddressR\x05parts\x12\x10\n" +
	"\x03app\x18\x04 \x01(\fR\x03app\x12\x14\n" +
	"\x05nonce\x18\x05 \x01(\fR\x05nonce\x12%\n" +
	"\x0eledger_channel\x18\x06 \x01(\bR\rledgerChannel\x12'\n" +
	"\x0fvirtual_channel\x18\a \x01(\bR\x0evirtualChannel\x12\x10\n" +
	"\x03aux\x18\b \x01(\fR\x03aux\"\xa9\x01\n" +
	"\x05State\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\x12\x10\n" +
	"\x03app\x18\x03 \x01(\fR\x03app\x125\n" +
	"\n" +
	"allocation\x18\x04 \x01(\v2\x15.perunwire.AllocationR\n" +
	"allocation\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x19\n" +
	"\bis_final\x18\x06 \x01(\bR\aisFinal\"I\n" +
	"\vTransaction\x12&\n" +
	"\x05state\x18\x01 \x01(\v2\x10.perunwire.StateR\x05state\x12\x12\n" +
	"\x04sigs\x18\x02 \x03(\fR\x04sigs\"t\n" +
	"\vSignedState\x12)\n" +
	"\x06params\x18\x01 \x01(\v2\x11.perunwire.ParamsR\x06params\x12&\n" +
	"\x05state\x18\x02 \x01(\v2\x10.perunwire.StateR\x05state\x12\x12\n" +
	"\x04sigs\x18\x03 \x03(\fR\x04sigs\"T\n" +
	"\rChannelUpdate\x12&\n" +
	"\x05state\x18\x01 \x01(\v2\x10.perunwire.StateR\x05state\x12\x1b\n" +
	"\tactor_idx\x18\x02 \x01(\rR\bactorIdx\"#\n" +
	"\aPingMsg\x12\x18\n" +
	"\acreated\x18\x01 \x01(\x03R\acreated\"#\n" +
	"\aPongMsg\x12\x18\n" +
	"\acreated\x18\x01 \x01(\x03R\acreated\"%\n" +
	"\vShutdownMsg\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"/\n" +
	"\x0fAuthResponseMsg\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\"\xce\x01\n" +
	"\x18LedgerChannelProposalMsg\x12R\n" +
	"\x15base_channel_proposal\x18\x01 \x01(\v2\x1e.perunwire.BaseChannelProposalR\x13baseChannelProposal\x124\n" +
	"\vparticipant\x18\x02 \x01(\v2\x12.perunwire.AddressR\vparticipant\x12(\n" +
	"\x05peers\x18\x03 \x03(\v2\x12.perunwire.AddressR\x05peers\"\xb1\x01\n" +
	"\x1bLedgerChannelProposalAccMsg\x12\\\n" +
	"\x19base_channel_proposal_acc\x18\x01 \x01(\v2!.perunwire.BaseChannelProposalAccR\x16baseChannelProposalAcc\x124\n" +
	"\vparticipant\x18\x02 \x01(\v2\x12.perunwire.AddressR\vparticipant\"\x83\x01\n" +
	"\x15SubChannelProposalMsg\x12R\n" +
	"\x15base_channel_proposal\x18\x01 \x01(\v2\x1e.perunwire.BaseChannelProposalR\x13baseChannelProposal\x12\x16\n" +
	"\x06parent\x18\x02 \x01(\fR\x06parent\"x\n" +
	"\x18SubChannelProposalAccMsg\x12\\\n" +
	"\x19base_channel_proposal_acc\x18\x01 \x01(\v2!.perunwire.BaseChannelProposalAccR\x16baseChannelProposalAcc\"\x97\x02\n" +
	"\x19VirtualChannelProposalMsg\x12R\n" +
	"\x15base_channel_proposal\x18\x01 \x01(\v2\x1e.perunwire.BaseChannelProposalR\x13baseChannelProposal\x12.\n" +
	"\bproposer\x18\x02 \x01(\v2\x12.perunwire.AddressR\bproposer\x12(\n" +
	"\x05peers\x18\x03 \x03(\v2\x12.perunwire.AddressR\x05peers\x12\x18\n" +
	"\aparents\x18\x04 \x03(\fR\aparents\x122\n" +
	"\n" +
	"index_maps\x18\x05 \x03(\v2\x13.perunwire.IndexMapR\tindexMaps\"\xae\x01\n" +
	"\x1cVirtualChannelProposalAccMsg\x12\\\n" +
	"\x19base_channel_proposal_acc\x18\x01 \x01(\v2!.perunwire.BaseChannelProposalAccR\x16baseChannelProposalAcc\x120\n" +
	"\tresponder\x18\x02 \x01(\v2\x12.perunwire.AddressR\tresponder\"P\n" +
	"\x15ChannelProposalRejMsg\x12\x1f\n" +
	"\vproposal_id\x18\x01 \x01(\fR\n" +
	"proposalId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"e\n" +
	"\x10ChannelUpdateMsg\x12?\n" +
	"\x0echannel_update\x18\x01 \x01(\v2\x18.perunwire.ChannelUpdateR\rchannelUpdate\x12\x10\n" +
	"\x03sig\x18\x02 \x01(\fR\x03sig\"\xd1\x01\n" +
	" VirtualChannelFundingProposalMsg\x12I\n" +
	"\x12channel_update_msg\x18\x01 \x01(\v2\x1b.perunwire.ChannelUpdateMsgR\x10channelUpdateMsg\x120\n" +
	"\ainitial\x18\x02 \x01(\v2\x16.perunwire.SignedStateR\ainitial\x120\n" +
	"\tindex_map\x18\x03 \x01(\v2\x13.perunwire.IndexMapR\bindexMap\"\x9e\x01\n" +
	"#VirtualChannelSettlementProposalMsg\x12I\n" +
	"\x12channel_update_msg\x18\x01 \x01(\v2\x1b.perunwire.ChannelUpdateMsgR\x10channelUpdateMsg\x12,\n" +
	"\x05final\x18\x02 \x01(\v2\x16.perunwire.SignedStateR\x05final\"`\n" +
	"\x13ChannelUpdateAccMsg\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\fR\tchannelId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\x12\x10\n" +
	"\x03sig\x18\x03 \x01(\fR\x03sig\"f\n" +
	"\x13ChannelUpdateRejMsg\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\fR\tchannelId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"]\n" +
	"\x0eChannelSyncMsg\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\rR\x05phase\x125\n" +
	"\n" +
	"current_tx\x18\x02 \x01(\v2\x16.perunwire.TransactionR\tcurrentTxB&Z$perun.network/go-perun/wire/protobufb\x06proto3"

var (
	file_wire_protobuf_wire_proto_rawDescOnce sync.Once
	file_wire_protobuf_wire_proto_rawDescData []byte
)

func file_wire_protobuf_wire_proto_rawDescGZIP() []byte {
	file_wire_protobuf_wire_proto_rawDescOnce.Do(func() {
		file_wire_protobuf_wire_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wire_protobuf_wire_proto_rawDesc), len(file_wire_protobuf_wire_proto_rawDesc)))
	})
	return file_wire_protobuf_wire_proto_rawDescData
}

var file_wire_protobuf_wire_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_wire_protobuf_wire_proto_goTypes = []any{
	(*Envelope)(nil),                            // 0: perunwire.Envelope
	(*Balance)(nil),                             // 1: perunwire.Balance
	(*Balances)(nil),                            // 2: perunwire.Balances
	(*AddressMapping)(nil),                      // 3: perunwire.AddressMapping
	(*Address)(nil),                             // 4: perunwire.Address
	(*IndexMap)(nil),                            // 5: perunwire.IndexMap
	(*SubAlloc)(nil),                            // 6: perunwire.SubAlloc
	(*Allocation)(nil),                          // 7: perunwire.Allocation
	(*BaseChannelProposal)(nil),                 // 8: perunwire.BaseChannelProposal
	(*BaseChannelProposalAcc)(nil),              // 9: perunwire.BaseChannelProposalAcc
	(*Params)(nil),                              // 10: perunwire.Params
	(*State)(nil),                               // 11: perunwire.State
	(*Transaction)(nil),                         // 12: perunwire.Transaction
	(*SignedState)(nil),                         // 13: perunwire.SignedState
	(*ChannelUpdate)(nil),                       // 14: perunwire.ChannelUpdate
	(*PingMsg)(nil),                             // 15: perunwire.PingMsg
	(*PongMsg)(nil),                             // 16: perunwire.PongMsg
	(*ShutdownMsg)(nil),                         // 17: perunwire.ShutdownMsg
	(*AuthResponseMsg)(nil),                     // 18: perunwire.AuthResponseMsg
	(*LedgerChannelProposalMsg)(nil),            // 19: perunwire.LedgerChannelProposalMsg
	(*LedgerChannelProposalAccMsg)(nil),         // 20: perunwire.LedgerChannelProposalAccMsg
	(*SubChannelProposalMsg)(nil),               // 21: perunwire.SubChannelProposalMsg
	(*SubChannelProposalAccMsg)(nil),            // 22: perunwire.SubChannelProposalAccMsg
	(*VirtualChannelProposalMsg)(nil),           // 23: perunwire.VirtualChannelProposalMsg
	(*VirtualChannelProposalAccMsg)(nil),        // 24: perunwire.VirtualChannelProposalAccMsg
	(*ChannelProposalRejMsg)(nil),               // 25: perunwire.ChannelProposalRejMsg
	(*ChannelUpdateMsg)(nil),                    // 26: perunwire.ChannelUpdateMsg
	(*VirtualChannelFundingProposalMsg)(nil),    // 27: perunwire.VirtualChannelFundingProposalMsg
	(*VirtualChannelSettlementProposalMsg)(nil), // 28: perunwire.VirtualChannelSettlementProposalMsg
	(*ChannelUpdateAccMsg)(nil),                 // 29: perunwire.ChannelUpdateAccMsg
	(*ChannelUpdateRejMsg)(nil),                 // 30: perunwire.ChannelUpdateRejMsg
	(*ChannelSyncMsg)(nil),                      // 31: perunwire.ChannelSyncMsg
}
var file_wire_protobuf_wire_proto_depIdxs = []int32{
	4,  // 0: perunwire.Envelope.sender:type_name -> perunwire.Address
	4,  // 1: perunwire.Envelope.recipient:type_name -> perunwire.Address
	15, // 2: perunwire.Envelope.ping_msg:type_name -> perunwire.PingMsg
	16, // 3: perunwire.Envelope.pong_msg:type_name -> perunwire.PongMsg
	17, // 4: perunwire.Envelope.shutdown_msg:type_name -> perunwire.ShutdownMsg
	18, // 5: perunwire.Envelope.auth_response_msg:type_name -> perunwire.AuthResponseMsg
	19, // 6: perunwire.Envelope.ledger_channel_proposal_msg:type_name -> perunwire.LedgerChannelProposalMsg
	20, // 7: perunwire.Envelope.ledger_channel_proposal_acc_msg:type_name -> perunwire.LedgerChannelProposalAccMsg
	21, // 8: perunwire.Envelope.sub_channel_proposal_msg:type_name -> perunwire.SubChannelProposalMsg
	22, // 9: perunwire.Envelope.sub_channel_proposal_acc_msg:type_name -> perunwire.SubChannelProposalAccMsg
	23, // 10: perunwire.Envelope.virtual_channel_proposal_msg:type_name -> perunwire.VirtualChannelProposalMsg
	24, // 11: perunwire.Envelope.virtual_channel_proposal_acc_msg:type_name -> perunwire.VirtualChannelProposalAccMsg
	25, // 12: perunwire.Envelope.channel_proposal_rej_msg:type_name -> perunwire.ChannelProposalRejMsg
	26, // 13: perunwire.Envelope.channel_update_msg:type_name -> perunwire.ChannelUpdateMsg
	27, // 14: perunwire.Envelope.virtual_channel_funding_proposal_msg:type_name -> perunwire.VirtualChannelFundingProposalMsg
	28, // 15: perunwire.Envelope.virtual_channel_settlement_proposal_msg:type_name -> perunwire.VirtualChannelSettlementProposalMsg
	29, // 16: perunwire.Envelope.channel_update_acc_msg:type_name -> perunwire.ChannelUpdateAccMsg
	30, // 17: perunwire.Envelope.channel_update_rej_msg:type_name -> perunwire.ChannelUpdateRejMsg
	31, // 18: perunwire.Envelope.channel_sync_msg:type_name -> perunwire.ChannelSyncMsg
	1,  // 19: perunwire.Balances.balances:type_name -> perunwire.Balance
	3,  // 20: perunwire.Address.address_mapping:type_name -> perunwire.AddressMapping
	1,  // 21: perunwire.SubAlloc.bals:type_name -> perunwire.Balance
	5,  // 22: perunwire.SubAlloc.index_map:type_name -> perunwire.IndexMap
	2,  // 23: perunwire.Allocation.balances:type_name -> perunwire.Balances
	6,  // 24: perunwire.Allocation.locked:type_name -> perunwire.SubAlloc
	7,  // 25: perunwire.BaseChannelProposal.init_bals:type_name -> perunwire.Allocation
	2,  // 26: perunwire.BaseChannelProposal.funding_agreement:type_name -> perunwire.Balances
	4,  // 27: perunwire.Params.parts:type_name -> perunwire.Address
	7,  // 28: perunwire.State.allocation:type_name -> perunwire.Allocation
	11, // 29: perunwire.Transaction.state:type_name -> perunwire.State
	10, // 30: perunwire.SignedState.params:type_name -> perunwire.Params
	11, // 31: perunwire.SignedState.state:type_name -> perunwire.State
	11, // 32: perunwire.ChannelUpdate.state:type_name -> perunwire.State
	8,  // 33: perunwire.LedgerChannelProposalMsg.base_channel_proposal:type_name -> perunwire.BaseChannelProposal
	4,  // 34: perunwire.LedgerChannelProposalMsg.participant:type_name -> perunwire.Address
	4,  // 35: perunwire.LedgerChannelProposalMsg.peers:type_name -> perunwire.Address
	9,  // 36: perunwire.LedgerChannelProposalAccMsg.base_channel_proposal_acc:type_name -> perunwire.BaseChannelProposalAcc
	4,  // 37: perunwire.LedgerChannelProposalAccMsg.participant:type_name -> perunwire.Address
	8,  // 38: perunwire.SubChannelProposalMsg.base_channel_proposal:type_name -> perunwire.BaseChannelProposal
	9,  // 39: perunwire.SubChannelProposalAccMsg.base_channel_proposal_acc:type_name -> perunwire.BaseChannelProposalAcc
	8,  // 40: perunwire.VirtualChannelProposalMsg.base_channel_proposal:type_name -> perunwire.BaseChannelProposal
	4,  // 41: perunwire.VirtualChannelProposalMsg.proposer:type_name -> perunwire.Address
	4,  // 42: perunwire.VirtualChannelProposalMsg.peers:type_name -> perunwire.Address
	5,  // 43: perunwire.VirtualChannelProposalMsg.index_maps:type_name -> perunwire.IndexMap
	9,  // 44: perunwire.VirtualChannelProposalAccMsg.base_channel_proposal_acc:type_name -> perunwire.BaseChannelProposalAcc
	4,  // 45: perunwire.VirtualChannelProposalAccMsg.responder:type_name -> perunwire.Address
	14, // 46: perunwire.ChannelUpdateMsg.channel_update:type_name -> perunwire.ChannelUpdate
	26, // 47: perunwire.VirtualChannelFundingProposalMsg.channel_update_msg:type_name -> perunwire.ChannelUpdateMsg
	13, // 48: perunwire.VirtualChannelFundingProposalMsg.initial:type_name -> perunwire.SignedState
	5,  // 49: perunwire.VirtualChannelFundingProposalMsg.index_map:type_name -> perunwire.IndexMap
	26, // 50: perunwire.VirtualChannelSettlementProposalMsg.channel_update_msg:type_name -> perunwire.ChannelUpdateMsg
	13, // 51: perunwire.VirtualChannelSettlementProposalMsg.final:type_name -> perunwire.SignedState
	12, // 52: perunwire.ChannelSyncMsg.current_tx:type_name -> perunwire.Transaction
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_wire_protobuf_wire_proto_init() }
func file_wire_protobuf_wire_proto_init() {
	if File_wire_protobuf_wire_proto != nil {
		return
	}
	file_wire_protobuf_wire_proto_msgTypes[0].OneofWrappers = []any{
		(*Envelope_PingMsg)(nil),
		(*Envelope_PongMsg)(nil),
		(*Envelope_ShutdownMsg)(nil),
		(*Envelope_AuthResponseMsg)(nil),
		(*Envelope_LedgerChannelProposalMsg)(nil),
		(*Envelope_LedgerChannelProposalAccMsg)(nil),
		(*Envelope_SubChannelProposalMsg)(nil),
		(*Envelope_SubChannelProposalAccMsg)(nil),
		(*Envelope_VirtualChannelProposalMsg)(nil),
		(*Envelope_VirtualChannelProposalAccMsg)(nil),
		(*Envelope_ChannelProposalRejMsg)(nil),
		(*Envelope_ChannelUpdateMsg)(nil),
		(*Envelope_VirtualChannelFundingProposalMsg)(nil),
		(*Envelope_VirtualChannelSettlementProposalMsg)(nil),
		(*Envelope_ChannelUpdateAccMsg)(nil),
		(*Envelope_ChannelUpdateRejMsg)(nil),
		(*Envelope_ChannelSyncMsg)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wire_protobuf_wire_proto_rawDesc), len(file_wire_protobuf_wire_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wire_protobuf_wire_proto_goTypes,
		DependencyIndexes: file_wire_protobuf_wire_proto_depIdxs,
		MessageInfos:      file_wire_protobuf_wire_proto_msgTypes,
	}.Build()
	File_wire_protobuf_wire_proto = out.File
	file_wire_protobuf_wire_proto_goTypes = nil
	file_wire_protobuf_wire_proto_depIdxs = nil
}
