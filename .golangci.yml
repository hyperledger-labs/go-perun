run:
  timeout: 2m

  # Skip the eth bindings.
  skip-dirs:
    - backend/ethereum/bindings/

  # Do not change go.{mod,sum}.
  modules-download-mode: readonly

linters:
  enable-all: true
  disable:
    # Disabled as a style choice:
    - wrapcheck # We do not rewrap all errors from other packages.
    - varnamelen # We often use single letter arguments.
    - exhaustivestruct # We often have uninitialized fields of structs.
    - errorlint # We have interface errors which an impl needs to return.
    - lll # We use long lines.
    - gochecknoglobals # We have a lot of globals.
    - nlreturn # "new line before return"; not useful.
    - paralleltest # We like parallel tests.
    - ireturn # We often return interfaces.
    - wsl # Formatting disabled for now.
    - gochecknoinits # We use init functions.
    - gci # We have our own import order.
    - goerr113 # We do not strictly require static errors.
    - promlinter # Disabled because unstable.

    # These could be enabled in the future:
    - ifshort # we often don't use `if err := â€¦` for readability.
    - tparallel # We don't always use parallel tests.

    # Deprecated:
    - maligned
    - scopelint
    - golint
    - interfacer

linters-settings:
  cyclop:
    # 15 is used by go-report-card as well.
    max-complexity: 15
  goheader:
    values:
      regexp:
        ANY_YEAR: "20(19|2\\d)" # 2019-2029
    template-path: ".scripts/copyright-notice"
  forbidigo:
    forbid:
      # Forbid functions to start with "get" or "Get".
      - ^[Gg]et.*$
      - ^[Ee]quals$
      # Default values:
      - ^print.*$
      - 'fmt\.Print.*'
    exclude-rules:
      - path: ".*\\.pb\\.go$" # Exclude protobuf generated files.
issues:
  # Re-enable default excludes.
  include:
    - EXC0012 # revive: exported (.+) should have comment or be unexported
    - EXC0013 # revive: package comment should be of the form "(.+)..."
    - EXC0014 # revive: comment on exported (.+) should be of the form "(.+)..."
    - EXC0015 # revive: package should have comment

  exclude-rules:
    - path: test
      linters:
        # We often have long test or test helper functions.
        - funlen
        # Can use panicing interface casts.
        - forcetypeassert
        # Can create dynamic errors with errors.New.
        - goerr113

    # We always use testing.T as first argument in testing functions,
    # therefore disable the "context must be the first argument" check in tests.
    - path: test
      linters: [revive]
      text: "context-as-argument"
